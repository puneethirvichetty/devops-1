# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the service account key.
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER and IMAGE environment variables (below).

name: Build and Deploy to GKE

on:
  push:
    branches:
    - master

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: cloudglobaldelivery-1000135575
  GKE_EMAIL: github@cloudglobaldelivery-1000135575.iam.gserviceaccount.com
  GITHUB_SHA: -----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCQi0BlcaWDC2Yc\ncmiNhPhTxpgbbXRiARUrS9rQAiQwVYrn554MKfONcNuYuJ7h6vOFJiFw/gAp7Zzh\nnxu6IpvV17NYuxAJduuSqjSqJEFTk+dAqI1+UCPtZxXDDtYJEJfEcWJ6TNeoXEYF\nBF8dVb/Zv5z7hkjSByuefaDeIAV+zUJaohPGukrgXrUsKKgdUC7vVWAfTvatA/lG\nV5/YBfX67bIcVEV5B2Jm+qFZRBM9uQTB/PzoBettFFPFM8b63RDdy38BiB9xsaUO\nEkfbxHIf8fISgoSUZus5YokJRzDPGtI7v5c0NNNdJD8dyOK35iYRL+q4uQCGi8eo\nuUPyxpZJAgMBAAECggEAECT9lFcVPYXQaez9cJEhi3nrE2UuUqP8UVGvpvwWPq/P\nTAe6x3EIGww3+t7kICe1+3E+2vgD3KsFks3KsweakE//YDHEoMn/leoc58QU59jl\nQ3uQEkOxP5r7+0V08p4/1Vk0vqRGki98QqMyXHxvaUrVpeJhz9OtM46koSrCcl8f\nyPXunvgLTqcXLfpGK7oI5mpvGDC8RGw7amS3maleNiO3Apx/eXD2jYcauwaHdHYS\ncI5XvKrpUxKeicEuA02BkJNsNaDb0Cj94CY7FFmxoosQwomC5kpnGvbK4vcxjHZa\n3wH9D+2l0ipJTfV9T12XkSMaU+ktx3j6wXkBLBUAAQKBgQDCN/D74eY5dvWcEeoF\nogrJIPEzVV8vNUG10lmwP+uV7P4KzxMeexkeZ33r4no1YXyLi/0vrduQ47UyIHhX\nSxiGK2pXURifPWyFrIy86m7KtYvfdoTWoQQ4D0BtvLnmqaTejL74HyUxF+YQjNH0\nVuaK0IkmXkM/PDjlUE1DvS1OSQKBgQC+hhgRSZisvGv4wBqtdoHyzOA0h+oHE9wC\nT+U+1DjgNihE4JOdaVn7Tr9JrHZnsB4EB87UZXBehif1SPlGroaKNE2uyXBKK7Vi\nNXPNuF88q7QEJQEgY2R4OQkAYOc4rAn6xTcJVQlHEXrF62BLYFZgQ1sa1x6vFO3O\nHYlJDe8IAQKBgQCxdoI49ZnzChK0b94BFaZ7TyF2AVz++s+2/qS7Gjz+elVKtRnI\nMTyrfm8d2YxHOHOf4uMO7PKCer53Nhof0VtwRT1e2ZgA8RQ3NIpImIFxsd9D6bzJ\njMkZHD6HxvmqnXorbDmW6IaITEkI+FNjyv/O+WtIZrtVjYaDahOfgL1kGQKBgHco\nLo1BVjdScMTWgNjUMVnFQMQZ7QgYJ5Vamqm82QWBWZYaTrg4V4qRKZnOPw+CWoNy\nzqyP9MNpbDxAM4c9R+/P3nXejlgVFhAiFhcnpIixapjc++Nhxkhag4K1GGedUXCB\nP3aatH66M+rs1wDNc7go6CXVPN+LW195oY8LI+ABAoGAIwK58Ig8NW0J6KDQv2Qb\nY9h2Wwr/fBXyVU9kJZ3jfFSxknAZDC/lyUP3z29JTG26vrttZfFOjSE3qLDt21Dd\nRyUtljI2hH0X30pWhlgrH8cXwTte6GUbXHPdFty1/u+K29E2cPAONwGbVYfWL5zk\ntfzX4yLs2XFXHYeObMSevgk=\n-----END PRIVATE KEY-----\n
  GKE_ZONE: us-west1-a
  GKE_CLUSTER: example-gke-cluster
  IMAGE: gke-test

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@master

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: github@cloudglobaldelivery-1000135575.iam.gserviceaccount.com
        service_account_key: cloudglobaldelivery-1000135575-e13d8b7591e4.json

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker
      
    # Build the Docker image
    - name: Build
      run: |        
        docker build -t gcr.io/"$GKE_PROJECT"/"$IMAGE":"$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        docker push gcr.io/$GKE_PROJECT/$IMAGE:$GITHUB_SHA
        
    # Set up kustomize
    - name: Set up Kustomize
      run: |
        curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
        ./kustomize edit set image gcr.io/$GKE_PROJECT/$IMAGE:${GITHUB_SHA}
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/gke-test
        kubectl get services -o wide
